<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.itmuch.cloud</groupId>
  <artifactId>spring-cloud-microservice-study</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>microservice-discovery-eureka</module>
    <module>microservice-provider-user</module>
    <module>microservice-consumer-movie-ribbon</module>
    <module>microservice-consumer-movie-feign</module>
    <module>microservice-consumer-movie-ribbon-with-hystrix</module>
    <module>microservice-consumer-movie-feign-with-hystrix</module>
    <module>microservice-hystrix-dashboard</module>
    <module>microservice-consumer-movie-feign-with-hystrix-stream</module>
    <module>microservice-hystrix-turbine</module>
    <module>microservice-config-server</module>
    <module>microservice-config-client</module>
    <module>microservice-config-server-eureka</module>
    <module>microservice-config-client-eureka</module>
    <module>microservice-api-gateway</module>
  </modules>

  <!-- 使用最新的spring-boot版本 -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.4.1.RELEASE</version>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <docker.image.prefix>cloud</docker.image.prefix>
    <docker.plugin.version>0.4.13</docker.plugin.version>
    <resources.plugin.version>3.0.2</resources.plugin.version>

    <spring-boot-admin.version>1.4.5</spring-boot-admin.version>
    <druid.version>1.0.15</druid.version>
    <lombok.version>1.12.2</lombok.version>
    <mybatis-spring-boot-starter.version>1.1.1</mybatis-spring-boot-starter.version>
    <jolokia.version>1.3.5</jolokia.version>

  </properties>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-core</artifactId>
      <version>${jolokia.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Camden.SR4</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <repositories>
    <repository>
      <id>spring-releases</id>
      <name>Spring Releases</name>
      <url>https://repo.spring.io/libs-release-local</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>build-info</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!--<plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${resources.plugin.version}</version>
          <executions>
            <execution>
              <id>prepare-dockerfile</id>
              <phase>validate</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/docker</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.basedir}/src/main/docker</directory>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker.plugin.version}</version>
          <executions>
            <execution>
              <id>build-image</id>
              <phase>package</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
            &lt;!&ndash; <imageTags>
                 <imageTag>${project.version}</imageTag>
                 <imageTag>latest</imageTag>
             </imageTags>
             <forceTags>true</forceTags>&ndash;&gt;
            <dockerDirectory>${project.build.directory}/docker</dockerDirectory>
            <resources>
              <resource>
                <targetPath>/</targetPath>
                <directory>${project.build.directory}</directory>
                <include>${project.build.finalName}.jar</include>
                <filtering>true</filtering>
              </resource>
            </resources>
          </configuration>
        </plugin>-->
      </plugins>
    </pluginManagement>
  </build>

</project><!--end-->
